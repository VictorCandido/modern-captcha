// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  nome     String
  username String @unique

  RoomParticipant RoomParticipant[]
  Bid             Bid[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AuctionRoom {
  id   String @id @default(uuid())
  nome String

  RoomParticipant RoomParticipant[]
  Bid             Bid[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RoomParticipant {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  auctionRoom   AuctionRoom @relation(fields: [auctionRoomId], references: [id], onDelete: Cascade)
  auctionRoomId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Bid {
  id     String  @id @default(uuid())
  amount Decimal

  auctionRoom   AuctionRoom @relation(fields: [auctionRoomId], references: [id], onDelete: Cascade)
  auctionRoomId String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
